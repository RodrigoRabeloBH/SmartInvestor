// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SmartInvestor.Infrastructure.Data;

#nullable disable

namespace SmartInvestor.Infrastructure.Migrations
{
    [DbContext(typeof(SmartInvestorDbContext))]
    partial class SmartInvestorDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("SmartInvestor.Domain.Entities.StockPlanning", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("AveragePrice")
                        .HasColumnType("numeric");

                    b.Property<bool>("Buy")
                        .HasColumnType("boolean");

                    b.Property<decimal>("CeilingPrice")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("CurrentPrice")
                        .HasColumnType("numeric");

                    b.Property<decimal>("CurrentQuantity")
                        .HasColumnType("numeric");

                    b.Property<decimal>("CurrentTotalAmmountInvested")
                        .HasColumnType("numeric");

                    b.Property<decimal>("CurrentYield")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Goal")
                        .HasColumnType("numeric");

                    b.Property<string>("LogoUrl")
                        .HasColumnType("text");

                    b.Property<decimal>("MinimumYieldRequired")
                        .HasColumnType("numeric");

                    b.Property<decimal>("ProjectedYield")
                        .HasColumnType("numeric");

                    b.Property<decimal>("PurchasePrice")
                        .HasColumnType("numeric");

                    b.Property<decimal>("RequiredQuantity")
                        .HasColumnType("numeric");

                    b.Property<string>("Ticket")
                        .HasColumnType("text");

                    b.Property<decimal>("TotalAmmountInvested")
                        .HasColumnType("numeric");

                    b.Property<Guid>("WalletId")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Weight")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("WalletId");

                    b.ToTable("StockPlanning");
                });

            modelBuilder.Entity("SmartInvestor.Domain.Entities.Wallet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("AmmountInvested")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Appreciation")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("CurrentAmmountInvested")
                        .HasColumnType("numeric");

                    b.Property<decimal>("DividendGoalPerYear")
                        .HasColumnType("numeric");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<string>("Username")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Wallet");
                });

            modelBuilder.Entity("SmartInvestor.Domain.Entities.StockPlanning", b =>
                {
                    b.HasOne("SmartInvestor.Domain.Entities.Wallet", "Wallet")
                        .WithMany("Stocks")
                        .HasForeignKey("WalletId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("SmartInvestor.Domain.Entities.Wallet", b =>
                {
                    b.Navigation("Stocks");
                });
#pragma warning restore 612, 618
        }
    }
}
